name: CI

on:
  push:
    branches:
      - master
    tags:
      - '*.*.*'
  pull_request:

concurrency:
  group: build-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    name: Build project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy CI gradle.properties
        run: |
          mkdir -p ~/.gradle
          cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Setup build tool version variable
        shell: bash
        run: |
          BUILD_TOOL_VERSION=$(ls /usr/local/lib/android/sdk/build-tools/ | tail -n 1)
          echo "BUILD_TOOL_VERSION=$BUILD_TOOL_VERSION" >> $GITHUB_ENV
          echo Last build tool version is: $BUILD_TOOL_VERSION

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: jetbrains

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: Build APK
        run: ./gradlew spotlessCheck assembleRelease --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: shouko-canary
          path: ${{ steps.sign_app.outputs.signedReleaseFile }}

      # Create new release
      - name: Get tag name
        if: startsWith(github.ref, 'refs/tags/')
        id: get_tag_name
        run: |
          set -x
          echo "VERSION_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Rename artifact
        if: startsWith(github.ref, 'refs/tags/')
        run: cp ${{ env.SIGNED_RELEASE_FILE }} shouko-${{ env.VERSION_TAG }}.apk

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION_TAG }}
          name: ${{ env.VERSION_TAG }}
          files: shouko-${{ env.VERSION_TAG }}.apk
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
